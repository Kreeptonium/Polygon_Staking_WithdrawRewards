{"version":3,"sources":["webpack://matic-staking/webpack/bootstrap","webpack://matic-staking/./src/contracts/index.ts","webpack://matic-staking/./src/contracts/matic_token.ts","webpack://matic-staking/./src/contracts/stake_manager.ts","webpack://matic-staking/./src/contracts/validator_share.ts","webpack://matic-staking/./src/index.ts","webpack://matic-staking/external \"@maticnetwork/maticjs\""],"names":[],"mappings":"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","file":"matic-staking.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export * from \"./stake_manager\";\r\nexport * from \"./validator_share\";\r\nexport * from \"./matic_token\";","import { BaseToken, IPOSClientConfig, ITransactionOption, MAX_AMOUNT, Web3SideChainClient } from \"@maticnetwork/maticjs\";\r\n\r\nexport class MaticToken extends BaseToken<IPOSClientConfig> {\r\n\r\n    stakeManagerAddress: string;\r\n\r\n    constructor(client: Web3SideChainClient<IPOSClientConfig>, address: string, stakeManagerAddress: string) {\r\n        super(\r\n            {\r\n                isParent: true,\r\n                address: address,\r\n                name: \"ERC20\",\r\n                bridgeType: 'plasma'\r\n            },\r\n            client\r\n        );\r\n        this.stakeManagerAddress = stakeManagerAddress;\r\n    }\r\n\r\n    protected getMethod(name: string, ...args) {\r\n        return this.getContract().then(contract => {\r\n            return contract.method(name, ...args);\r\n        });\r\n    }\r\n\r\n    getAllowanceForStakingManager(userAddress: string) {\r\n        return this.getMethod(\r\n            \"allowance\",\r\n            userAddress,\r\n            this.stakeManagerAddress\r\n        ).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    approveMaxForStakingManager(option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"approve\",\r\n            this.stakeManagerAddress,\r\n            MAX_AMOUNT\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    getBalance(userAddress: string) {\r\n        return this.getMethod(\r\n            \"balanceOf\",\r\n            userAddress,\r\n        ).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n}","import { BaseToken, Converter, IPOSClientConfig, ITransactionOption, TYPE_AMOUNT, Web3SideChainClient } from \"@maticnetwork/maticjs\";\r\n\r\nexport class StakeManager extends BaseToken<IPOSClientConfig> {\r\n\r\n    constructor(client: Web3SideChainClient<IPOSClientConfig>, address: string) {\r\n        super(\r\n            {\r\n                isParent: true,\r\n                address: address,\r\n                name: \"StakeManager\",\r\n                bridgeType: 'plasma'\r\n            },\r\n            client\r\n        );\r\n    }\r\n\r\n    protected getMethod(name: string, ...args) {\r\n        return this.getContract().then(contract => {\r\n            return contract.method(name, ...args);\r\n        });\r\n    }\r\n\r\n    getCheckPointReward() {\r\n        return this.getMethod(\"CHECKPOINT_REWARD\").then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getWithdrawalDelay() {\r\n        return this.getMethod(\"WITHDRAWAL_DELAY\").then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getLockedStatus() {\r\n        return this.getMethod(\"locked\").then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getValidatorDetails(validatorId) {\r\n        return this.getMethod(\"validators\", validatorId).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getMinHeimdallFee() {\r\n        return this.getMethod(\"minHeimdallFee\").then(method => {\r\n            return this.processRead<string>(method);\r\n        });\r\n    }\r\n\r\n    getMinDeposit() {\r\n        return this.getMethod(\"minDeposit\").then(method => {\r\n            return this.processRead<string>(method);\r\n        });\r\n    }\r\n\r\n\r\n    stakeFor(userAddress: string, amount: TYPE_AMOUNT, heimdallFee: TYPE_AMOUNT, acceptDelegation, signerPubkey, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"stakeFor\",\r\n            Converter.toHex(userAddress),\r\n            Converter.toHex(amount),\r\n            Converter.toHex(heimdallFee),\r\n            acceptDelegation,\r\n            signerPubkey\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * add fee to heimdall chain for doing transacion for validator\r\n     *\r\n     * @param {string} userAddress\r\n     * @param {TYPE_AMOUNT} amount\r\n     * @return {*} \r\n     * @memberof StakeManager\r\n     */\r\n    addTopUpForHeimdallFee(userAddress: string, amount: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"topUpForFee\",\r\n            Converter.toHex(userAddress),\r\n            Converter.toHex(amount),\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    unStake(validatorId, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"unstake\",\r\n            Converter.toHex(validatorId)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    claimStakedAmount(validatorId, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"unstakeClaim\",\r\n            Converter.toHex(validatorId)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    reStake(validatorId, amount: TYPE_AMOUNT, validatorStake: boolean, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"restake\",\r\n            Converter.toHex(validatorId),\r\n            Converter.toHex(amount),\r\n            validatorStake\r\n\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    withdrawRewardForValidator(validatorId, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"withdrawRewards\",\r\n            Converter.toHex(validatorId)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    migrateDelegation(fromValidatorId, toValidatorId, amount: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"migrateDelegation\",\r\n            Converter.toHex(fromValidatorId),\r\n            Converter.toHex(toValidatorId),\r\n            Converter.toHex(amount)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    updateCommissionRate(validatorId: TYPE_AMOUNT, validatorCommission: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"updateCommissionRate\",\r\n            Converter.toHex(validatorId),\r\n            Converter.toHex(validatorCommission),\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    updateSigner(validatorId: TYPE_AMOUNT, publicKey: string, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"updateSigner\",\r\n            Converter.toHex(validatorId),\r\n            publicKey,\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get total matic staked\r\n     *\r\n     * @return {*} \r\n     * @memberof StakeManager\r\n     */\r\n    getTotalStake() {\r\n        return this.getMethod(\"currentValidatorSetTotalStake\").then(method => {\r\n            return this.processRead<string>(method);\r\n        });\r\n    }\r\n\r\n}","import { BaseToken, Converter, IPOSClientConfig, ITransactionOption, TYPE_AMOUNT, Web3SideChainClient } from \"@maticnetwork/maticjs\";\r\n\r\nexport class ValidatorShare extends BaseToken<IPOSClientConfig> {\r\n\r\n    constructor(client: Web3SideChainClient<IPOSClientConfig>, address: string) {\r\n        super(\r\n            {\r\n                isParent: true,\r\n                address: address,\r\n                name: \"ValidatorShare\",\r\n                bridgeType: 'plasma'\r\n            },\r\n            client\r\n        );\r\n    }\r\n\r\n    protected getMethod(name: string, ...args) {\r\n        return this.getContract().then(contract => {\r\n            return contract.method(name, ...args);\r\n        });\r\n    }\r\n\r\n    getExchangeRate() {\r\n        return this.getMethod(\"exchangeRate\").then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getOldUnbonds(address: string) {\r\n        return this.getMethod(\"unbonds\", address).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getNewUnbonds(address: string, nonce) {\r\n        return this.getMethod(\"unbonds_new\", address, nonce).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n\r\n    getLiquidRewards(address: string) {\r\n        return this.getMethod(\"getLiquidRewards\", address).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    getMinAmountToStake() {\r\n        return this.getMethod(\"minAmount\").then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * return balance of shares of delegator\r\n     *\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    getBalance(address: string) {\r\n        return this.getMethod(\"balanceOf\", address).then(method => {\r\n            return this.processRead(method);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * delegate amount to validator\r\n     *\r\n     *  internally it calls method - **buyVoucher**\r\n     * \r\n     * @param {TYPE_AMOUNT} amount\r\n     * @param {TYPE_AMOUNT} minAmountToStake\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    delegateAmount(amount: TYPE_AMOUNT, minAmountToStake: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"buyVoucher\",\r\n            Converter.toHex(amount),\r\n            Converter.toHex(minAmountToStake)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *  unstake delegated amount\r\n     *\r\n     * internally it calls - **sellVoucher_new**\r\n     * \r\n     * @param {TYPE_AMOUNT} amount\r\n     * @param {TYPE_AMOUNT} maximumSharesToBurn\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    removeDelegatedAmount(amount: TYPE_AMOUNT, maximumSharesToBurn: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"sellVoucher_new\",\r\n            Converter.toHex(amount),\r\n            Converter.toHex(maximumSharesToBurn)\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * claim the delegated amount by supplying nonce\r\n     *\r\n     * internally it calls - **unstakeClaimTokens_new**\r\n     * \r\n     * @param {TYPE_AMOUNT} nonce\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    claimDelegatedAmount(nonce: TYPE_AMOUNT, option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"unstakeClaimTokens_new\",\r\n            Converter.toHex(nonce),\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * restake the earned rewards\r\n     *\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    restakeReward(option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"restake\",\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * withdraw earned rewards\r\n     *\r\n     * @return {*} \r\n     * @memberof ValidatorShare\r\n     */\r\n    withdrawRewards(option?: ITransactionOption) {\r\n        return this.getMethod(\r\n            \"withdrawRewards\",\r\n        ).then(method => {\r\n            return this.processWrite(method, option);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}","import { BridgeClient, IPOSClientConfig } from \"@maticnetwork/maticjs\";\r\nimport { MaticToken, StakeManager, ValidatorShare } from \"./contracts\";\r\n\r\nexport class StakingClient extends BridgeClient<IPOSClientConfig> {\r\n    stakeManager: StakeManager;\r\n    maticToken: MaticToken;\r\n\r\n    init(config: IPOSClientConfig) {\r\n        const client = this.client;\r\n        return client.init(config).then(_ => {\r\n            const mainPlasmaContracts = client.mainPlasmaContracts;\r\n            const stakeManagerProxyAddress = mainPlasmaContracts.StakeManagerProxy;\r\n            const maticTokenAddress = mainPlasmaContracts.Tokens.MaticToken;\r\n            this.stakeManager = new StakeManager(client, stakeManagerProxyAddress);\r\n            this.maticToken = new MaticToken(client, maticTokenAddress, stakeManagerProxyAddress);\r\n        });\r\n    }\r\n\r\n    validatorShare(address: string) {\r\n        return new ValidatorShare(\r\n            this.client,\r\n            address\r\n        );\r\n    }\r\n\r\n}","module.exports = require(\"@maticnetwork/maticjs\");"],"sourceRoot":""}